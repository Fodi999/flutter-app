import 'package:flutter/material.dart';
import 'package:sushi_app/models/user.dart';
import 'package:sushi_app/models/menu_item.dart';

import 'package:sushi_app/components/custom_card.dart';
import 'package:sushi_app/screens/user/components/profile_header.dart';
import 'package:sushi_app/screens/user/components/dish_autocomplete_input.dart';
import 'package:sushi_app/screens/user/components/editable_tabs.dart';
import 'package:sushi_app/screens/user/components/profile_info.dart';
import 'package:sushi_app/screens/user/components/grouped_menu.dart';

import 'package:sushi_app/utils/log_helper.dart';

class ProfileContent extends StatelessWidget {
  const ProfileContent({
    super.key,
    required this.user,
    required this.menu,
    required this.editMode,
    required this.isDark,
    required this.tabController,
    required this.scrollController,
    required this.nameController,
    required this.emailController,
    required this.phoneController,
    required this.addressController,
    required this.bioController,
    required this.birthdayController,
    required this.onSaveProfile,
    required this.onCancelEdit,
    required this.onAddToCart,
    required this.orderHistoryTab,
    required this.adBanner, // ‚úÖ –Ω–æ–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä
  });

  final User user;
  final List<MenuItem> menu;

  final bool editMode;
  final bool isDark;

  final TabController tabController;
  final ScrollController scrollController;

  final TextEditingController nameController;
  final TextEditingController emailController;
  final TextEditingController phoneController;
  final TextEditingController addressController;
  final TextEditingController bioController;
  final TextEditingController birthdayController;

  final VoidCallback onSaveProfile;
  final VoidCallback onCancelEdit;
  final void Function(MenuItem) onAddToCart;

  final Widget orderHistoryTab;
  final Widget adBanner; // ‚úÖ —Ä–µ–∫–ª–∞–º–Ω—ã–π –±–ª–æ–∫

  @override
  Widget build(BuildContext context) {
    tabController.addListener(() {
      if (tabController.indexIsChanging) {
        final tab = ['–ü—Ä–æ—Ñ–∏–ª—å', '–ú–µ–Ω—é', '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤'][tabController.index];
        logInfo('üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É: $tab', tag: 'ProfileContent');
      }
    });

    return Column(
      children: [
        TabBar(
          controller: tabController,
          tabs: const [
            Tab(text: '–ü—Ä–æ—Ñ–∏–ª—å'),
            Tab(text: '–ú–µ–Ω—é'),
            Tab(text: '–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤'),
          ],
        ),
        Expanded(
          child: TabBarView(
            controller: tabController,
            children: [
              _buildProfileTab(),
              _buildMenuTab(context),
              orderHistoryTab,
            ],
          ),
        ),
      ],
    );
  }

  Widget _buildProfileTab() {
    return SingleChildScrollView(
      controller: scrollController,
      padding: const EdgeInsets.all(20),
      child: Column(
        children: [
          ProfileHeader(user: user, isDark: isDark),
          const SizedBox(height: 20),
          adBanner, // ‚úÖ –≤—Å—Ç–∞–≤–∫–∞ —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –±–ª–æ–∫–∞
          const SizedBox(height: 20),
          DishAutocompleteInput(
            onSelected: (sel) {
              logInfo('üìç –í—ã–±—Ä–∞–Ω –∞–¥—Ä–µ—Å –∏–∑ –ø–æ–¥—Å–∫–∞–∑–∫–∏: $sel', tag: 'ProfileContent');
              addressController.text = sel;
            },
          ),
          const SizedBox(height: 20),
          CustomCard(
            padding: const EdgeInsets.all(16),
            child: editMode
                ? EditableTabs(
                    tabController: tabController,
                    nameController: nameController,
                    bioController: bioController,
                    birthdayController: birthdayController,
                    emailController: emailController,
                    phoneController: phoneController,
                    addressController: addressController,
                    onSave: () {
                      logInfo('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', tag: 'ProfileContent');
                      onSaveProfile();
                    },
                    onCancel: () {
                      logInfo('‚ùå –û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è', tag: 'ProfileContent');
                      onCancelEdit();
                    },
                  )
                : ProfileInfo(fields: {
                    'Email': user.email,
                    '–¢–µ–ª–µ—Ñ–æ–Ω': user.phone,
                    '–ê–¥—Ä–µ—Å': user.address,
                    '–û —Å–µ–±–µ': user.bio,
                    '–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è': user.birthday,
                  }),
          ),
        ],
      ),
    );
  }

  Widget _buildMenuTab(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.all(16),
      child: GroupedMenu(
        items: menu,
        onAddToCart: (item) {
          logInfo('‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ "${item.name}" –≤ –∫–æ—Ä–∑–∏–Ω—É', tag: 'ProfileContent');
          onAddToCart(item);
        },
      ),
    );
  }
}





