import 'package:flutter/material.dart';
import 'package:flutter_riverpod/flutter_riverpod.dart';

import '../state/cart_state.dart';           // üõí Riverpod-–ø—Ä–æ–≤–∞–π–¥–µ—Ä –∫–æ—Ä–∑–∏–Ω—ã
import '../utils/log_helper.dart';           // üßæ –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏–π
import 'cart_button.dart';                   // üß© –í–∏–¥–∂–µ—Ç –∫–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã

class ProfileAppBar extends ConsumerWidget implements PreferredSizeWidget {
  final bool editMode;
  final bool isDark;
  final VoidCallback onToggleEdit;
  final VoidCallback onToggleTheme;
  final VoidCallback onLogout;
  final VoidCallback onOpenCart;

  const ProfileAppBar({
    super.key,
    required this.editMode,
    required this.isDark,
    required this.onToggleEdit,
    required this.onToggleTheme,
    required this.onLogout,
    required this.onOpenCart,
  });

  @override
  Size get preferredSize => const Size.fromHeight(kToolbarHeight);

  @override
  Widget build(BuildContext context, WidgetRef ref) {
    final qty = ref.watch(cartStateProvider).totalQty;

    return AppBar(
      elevation: 0,
      backgroundColor: Theme.of(context).colorScheme.surface,
      foregroundColor: Theme.of(context).colorScheme.onSurface,
      title: const Text('–ü—Ä–æ—Ñ–∏–ª—å'),
      actions: [
        Tooltip(
          message: editMode ? '–û—Ç–º–µ–Ω–∏—Ç—å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ' : '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ—Ñ–∏–ª—å',
          waitDuration: const Duration(milliseconds: 500),
          child: IconButton(
            icon: Icon(editMode ? Icons.close : Icons.edit),
            onPressed: () {
              logInfo(
                editMode
                    ? '–û—Ç–º–µ–Ω–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è'
                    : '–í–∫–ª—é—á–µ–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è',
                tag: 'ProfileAppBar',
              );
              onToggleEdit();
            },
          ),
        ),
        Tooltip(
          message: '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É',
          waitDuration: const Duration(milliseconds: 500),
          child: IconButton(
            icon: Icon(isDark ? Icons.wb_sunny : Icons.nightlight),
            onPressed: () {
              logInfo(
                '–°–º–µ–Ω–∞ —Ç–µ–º—ã: ${isDark ? '–Ω–∞ —Å–≤–µ—Ç–ª—É—é' : '–Ω–∞ —Ç—ë–º–Ω—É—é'}',
                tag: 'ProfileAppBar',
              );
              onToggleTheme();
            },
          ),
        ),
        Tooltip(
          message: '–í—ã–π—Ç–∏',
          waitDuration: const Duration(milliseconds: 500),
          child: IconButton(
            icon: const Icon(Icons.logout),
            onPressed: () {
              logWarning('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –≤—ã—Ö–æ–¥ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞', tag: 'ProfileAppBar');
              onLogout();
            },
          ),
        ),
        Tooltip(
          message: '–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É',
          waitDuration: const Duration(milliseconds: 500),
          child: CartButton(
           
            onPressed: () {
              logInfo('–û—Ç–∫—Ä—ã—Ç–∏–µ –∫–æ—Ä–∑–∏–Ω—ã (–∫–æ–ª-–≤–æ: $qty)', tag: 'ProfileAppBar');
              onOpenCart();
            },
          ),
        ),
      ],
    );
  }
}




